// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}


model User {
  id           BigInt         @id @default(autoincrement())
  first_name   String
  last_name    String
  email        String         @unique
  password     String
  questionsDone QuestionsDone[]
  diagnosticQuestionsDone DiagnosticQuestionsDone[]
}

model QuestionsDone {
  user_id     BigInt   
  question_id BigInt   
  score       Int
  user        User     @relation(fields: [user_id], references: [id])
  question    Questions @relation(fields: [question_id], references: [id])

  @@id([user_id, question_id])
}

model CourseInfo {
  id      BigInt   @id @default(autoincrement())
  course_name String
  topics  Topics[]
  report Reports[]
}

model Topics {
  id          BigInt       @id @default(autoincrement())
  topic_name  String
  course_id   BigInt
  course      CourseInfo   @relation(fields: [course_id], references: [id])
  questions   Questions[]
}

model Questions {
  id          BigInt       @id @default(autoincrement())
  question    String
  topic_id    BigInt
  hint        String
  topic       Topics       @relation(fields: [topic_id], references: [id])
  solution    Solutions?
  questionsDone QuestionsDone[]
  subproblems Subproblems[]
  diagnosticProblems DiagnosticQuestionsDone[]
}

model Subproblems {
  id          BigInt     @id @default(autoincrement())
  count       BigInt
  question_id BigInt     
  title       String
  description String
  question    Questions  @relation(fields: [question_id], references: [id])
}

model Solutions {
  id          BigInt     @id @default(autoincrement())
  question_id BigInt     @unique
  solution    String
  question    Questions  @relation(fields: [question_id], references: [id])
}

model DiagnosticQuestionsDone {
  report_id   BigInt
  question_id BigInt
  user_id     BigInt
  feedback    String
  user_input  String

  report      Reports    @relation(fields: [report_id], references: [id])
  question    Questions  @relation(fields: [question_id], references: [id])
  user        User       @relation(fields: [user_id], references: [id])

  @@id([report_id, question_id, user_id])
}

model Reports {
  id          BigInt      @id @default(autoincrement())
  course_id   BigInt      

  course      CourseInfo @relation(fields: [course_id], references: [id])
  diagnosticQuestionsDone DiagnosticQuestionsDone[]
}